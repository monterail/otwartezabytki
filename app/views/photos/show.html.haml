%section.show.photo
  %h2= t('views.photos.show.header', :count => relic.all_photos.count)
  .content
    .photo_content(data-replace="section.show.photo .photo_content")

      = link_to "«", '#', :remote => true, :class => "prev js-prev"

      = link_to "»", '#', :remote => true, :class => "next js-next"
      .photo_center{ :style => "width: #{tree_photo.file_full_width || 800}px; margin: 0 auto;" }
        - if tree_photo.file_full_height.present?
          .full-photo= image_tag(tree_photo.file.full.url, :width => tree_photo.file_full_width, :height => tree_photo.file_full_height, :alt => strip_tags("#{relic.identification} #{tree_photo.description} #{tree_photo.alternate_text}"))
        - else
          .full-photo= image_tag(tree_photo.file.full.url, :alt => strip_tags("#{relic.identification} #{tree_photo.description} #{tree_photo.alternate_text}"))

        .info-left
          %p.info-row
            %strong= t('activerecord.attributes.photo.author')
            = tree_photo.author
          %p.info-row
            %strong= t('activerecord.attributes.photo.date_taken')
            = tree_photo.date_taken
        .info-right
          %p.info-row
            = t('views.photos.show.photo_belongs_to')
            = link_to relic.identification, [relic]

            - if relic.parent
              = t('views.photos.show.relic_parent')
              = link_to relic.parent.identification, [relic.parent]

          %p.info-row= t('views.photos.show.license')
        %p.description
          %strong= t('activerecord.attributes.photo.description')
          = sanitize tree_photo.description

    %ul#slider_midi.jcarousel-skin-midi{ :"data-photos" => (relic.is_group? ? relic.all_photos.position_group_order.all.map(&:as_json_in_group).to_json : relic.all_photos.all.to_json) }
    .hidden.photo-id=tree_photo.id
    .hidden.relic-id=tree_photo.relic_id
.row.oz-xs-sm-text-center
  = semantic_form_for relic, :url => section_relic_path(relic.id, :section => :location), :remote => true, :html => { :class => (relic.geocoded? ? 'geocoded' : "") } do |f|
    .col-lg-4.col-md-4.col-sm-12.col-xs-12
      = f.input :polish_relic, :as => :boolean
      .polish-location{ :style => (relic.polish_relic ? "" : "display: none;") }
        = render :partial => 'relicbuilders/administrative_level'
      .foreign-location{ :style => (relic.polish_relic ? "display: none;" : "") }
        %script(type="application/json" id="countries_location")
          != Country.coordinates.to_json
        = f.input :country_code, :as => :select, :include_blank => false, :default => "PL",
          :collection => Country.coordinates.keys.map{|code| [I18n.t(code, :scope => :countries), code]}.sort_alphabetical_by(&:first),
          :input_html => { :style => "width: 234px;" }
        = f.input :fprovince
        = f.input :fplace
      .street_input{ :style => (relic.street.blank? ? "display: none" : "") }
        = f.input :street
      = link_to (relic.street.blank? ? t('views.relics.edit.location.known_address') : t('views.relics.edit.location.unknown_address')), '#', :class => "toggle_street_input"
      %br
      .actions
        %button= t('views.relics.edit.save')
        = t('views.relics.edit.or')
        = link_to t('views.relics.edit.cancel'), relic_path(relic.id), :remote => true, :class => "cancel"

    .col-lg-5.col-md-6.col-sm-12.col-xs-12
      #map_canvas{ :style => "width: 309px; height: 309px;" }
      %p.auto_geolocated
        = image_tag "gmap-flashing-point.png"
        = t('views.relics.edit.location.approximate_geolocation')
    .col-lg-3.col-md-6.col-sm-12.col-xs-12
      .marker-helper
        %h4= t('views.relics.edit.location.drop_marker_html')
        .marker-holder
          = image_tag 'marker.png', :id => 'marker'
      = f.hidden_field :latitude
      = f.hidden_field :longitude
.row
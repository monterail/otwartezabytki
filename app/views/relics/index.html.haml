- model_class = Relic.new.class
.page-header
  %h1=t '.title', :default => model_class.model_name.human.pluralize

Total: #{relics.total}
= simple_form_for relics_path, :html => { :class => 'well form-search' },:method => :get do |f|
  = f.input :query, :label => false, :input_html => {:name => 'query', :value => params[:query], :class => "search-query"}, :placeholder => "Szukaj"
  = f.button :submit, 'Szukaj'

= paginate relics

%table.table.table-striped
  %thead
    %tr
      -# %th= model_class.human_attribute_name(:id)
      %th= model_class.human_attribute_name(:place_id)
      %th= model_class.human_attribute_name(:identification)
      %th= model_class.human_attribute_name(:group)
      -# %th= model_class.human_attribute_name(:number)
      -# %th= model_class.human_attribute_name(:materail)
      %th= model_class.human_attribute_name(:dating_of_obj)
      %th= model_class.human_attribute_name(:street)
      %th= model_class.human_attribute_name(:register_number)
      -# %th= model_class.human_attribute_name(:national_number)
      -# %th= model_class.human_attribute_name(:latitude)
      -# %th= model_class.human_attribute_name(:longitude)
      -# %th= model_class.human_attribute_name(:created_at)
      %th=t '.actions', :default => t("helpers.actions")
  %tbody
    - relics.each do |relic|
      %tr
        -# %td= link_to relic.id, relic_path(relic)
        %td= relic.place.full_name
        %td
          = "(G)" if relic.number.zero?
          = link_to relic.identification, relic_path(relic)
        %td= relic.group
        -# %td= relic.number
        -# %td= relic.materail
        %td= relic.dating_of_obj
        %td= relic.street
        %td= relic.register_number
        -# %td= relic.national_number
        -# %td= relic.latitude
        -# %td= relic.longitude
        -# %td=l relic.created_at
        %td
          = link_to t('.edit', :default => t("helpers.links.edit")), edit_relic_path(relic), :class => 'btn btn-mini'
          -# = link_to t('.destroy', :default => t("helpers.links.destroy")), relic_path(relic), :method => :delete, :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')), :class => 'btn btn-mini btn-danger'

-# = link_to t('.new', :default => t("helpers.links.new")), new_relic_path, :class => 'btn btn-primary'
= paginate relics

- content_for :sidebar do
  .well.sidebar-nav
    %h3 Facets
    %ul.nav.nav-list
      - relics.facets['voivodeships']['terms'].each do |t|
        - voivodeship = Voivodeship.find(t['term'])
        %li
          = link_to "#{voivodeship.name} (#{t['count']})", relics_path(:query => params[:query], :voivodeship_id => t['term'])
          %ul
            - relics.facets['districts']['terms'].each do |t|
              - district = District.find(t['term'])
              -# - next if district.voivodeship_id != voivodeship.id
              %li
                = link_to "#{district.name} (#{t['count']})", relics_path(:query => params[:query], :district_id => t['term'])
          -#       %ul
          -#         - relics.facets['communes']['terms'].each do |t|
          -#           - commune = Commune.find(t['term'])
          -#           - next if commune.district_id != district.id
          -#           %li
          -#             = link_to "#{commune.name} (#{t['count']})", relics_path(:query => params[:query], :commune_id => t['term'])
          -#             %ul
          -#               - relics.facets['places']['terms'].each do |t|
          -#                 - place = Place.find(t['term'])
          -#                 - next if place.commune_id != commune.id
          -#                 %li
          -#                   = link_to "#{place.name} (#{t['count']})", relics_path(:query => params[:query], :place_id => t['term'])
